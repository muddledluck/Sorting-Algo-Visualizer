{"ast":null,"code":"import { checkAlgo, swap } from \"../SortingComponents/SortingComponents\";\nexport function getBubbleSortAnimations(array) {\n  const animations = [];\n\n  if (array.length <= 1) {\n    return array;\n  }\n\n  const auxiliaryArray = array.slice();\n  bubbleSortHelper(auxiliaryArray, array.length, animations);\n  const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n  array = auxiliaryArray;\n  console.log(\"alog is Correct (Bubble Sort)? \", checkAlgo(array, javaScriptSortedArray));\n  return animations;\n}\n\nfunction bubbleSortHelper(auxiliaryArray, arrLength, animations) {\n  for (let i = 0; i < arrLength; i++) {\n    let swapped = false;\n\n    for (let j = 0; j < arrLength - 1; j++) {\n      if (auxiliaryArray[j] < auxiliaryArray[j + 1]) {\n        animations.push([j, j + 1]);\n        animations.push([j + 1, j]);\n        animations.push([j, auxiliaryArray[j + 1]]);\n        swap(auxiliaryArray, j, j + 1);\n        swapped = true;\n      }\n    }\n\n    if (!swapped) {\n      break;\n    }\n  }\n}","map":{"version":3,"sources":["/home/kali/Desktop/Project/Sorting-Algo-Visualizer/src/components/BubbleSortAnimation/BubbleSortAnimation.js"],"names":["checkAlgo","swap","getBubbleSortAnimations","array","animations","length","auxiliaryArray","slice","bubbleSortHelper","javaScriptSortedArray","sort","a","b","console","log","arrLength","i","swapped","j","push"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,wCAAhC;AAEA,OAAO,SAASC,uBAAT,CAAiCC,KAAjC,EAAuC;AAC7C,QAAMC,UAAU,GAAG,EAAnB;;AACA,MAAID,KAAK,CAACE,MAAN,IAAgB,CAApB,EAAsB;AACrB,WAAOF,KAAP;AACA;;AACD,QAAMG,cAAc,GAAGH,KAAK,CAACI,KAAN,EAAvB;AACAC,EAAAA,gBAAgB,CAACF,cAAD,EAAiBH,KAAK,CAACE,MAAvB,EAA+BD,UAA/B,CAAhB;AACA,QAAMK,qBAAqB,GAAGN,KAAK,CAACI,KAAN,GAAcG,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAjC,CAA9B;AACAT,EAAAA,KAAK,GAAGG,cAAR;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+Cd,SAAS,CAACG,KAAD,EAAQM,qBAAR,CAAxD;AACA,SAAOL,UAAP;AACA;;AAED,SAASI,gBAAT,CAA0BF,cAA1B,EAA0CS,SAA1C,EAAqDX,UAArD,EAAgE;AAC/D,OAAI,IAAIY,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,SAAnB,EAA8BC,CAAC,EAA/B,EAAkC;AACjC,QAAIC,OAAO,GAAG,KAAd;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,SAAS,GAAG,CAA/B,EAAkCG,CAAC,EAAnC,EAAsC;AACrC,UAAIZ,cAAc,CAACY,CAAD,CAAd,GAAoBZ,cAAc,CAACY,CAAC,GAAG,CAAL,CAAtC,EAA8C;AAC7Cd,QAAAA,UAAU,CAACe,IAAX,CAAgB,CAACD,CAAD,EAAIA,CAAC,GAAC,CAAN,CAAhB;AACAd,QAAAA,UAAU,CAACe,IAAX,CAAgB,CAACD,CAAC,GAAC,CAAH,EAAMA,CAAN,CAAhB;AACAd,QAAAA,UAAU,CAACe,IAAX,CAAgB,CAACD,CAAD,EAAIZ,cAAc,CAACY,CAAC,GAAC,CAAH,CAAlB,CAAhB;AACAjB,QAAAA,IAAI,CAACK,cAAD,EAAiBY,CAAjB,EAAoBA,CAAC,GAAC,CAAtB,CAAJ;AACAD,QAAAA,OAAO,GAAG,IAAV;AACA;AACD;;AACD,QAAG,CAACA,OAAJ,EAAY;AACX;AACA;AACD;AACD","sourcesContent":["import { checkAlgo, swap } from \"../SortingComponents/SortingComponents\";\n\nexport function getBubbleSortAnimations(array){\n\tconst animations = [];\n\tif (array.length <= 1){\n\t\treturn array;\n\t}\n\tconst auxiliaryArray = array.slice();\n\tbubbleSortHelper(auxiliaryArray, array.length, animations);\n\tconst javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n\tarray = auxiliaryArray;\n\tconsole.log(\"alog is Correct (Bubble Sort)? \", checkAlgo(array, javaScriptSortedArray));\n\treturn animations;\n}\n\nfunction bubbleSortHelper(auxiliaryArray, arrLength, animations){\n\tfor(let i = 0; i < arrLength; i++){\n\t\tlet swapped = false;\n\t\tfor(let j = 0; j < arrLength - 1; j++){\n\t\t\tif (auxiliaryArray[j] < auxiliaryArray[j + 1]){\n\t\t\t\tanimations.push([j, j+1]);\n\t\t\t\tanimations.push([j+1, j]);\n\t\t\t\tanimations.push([j, auxiliaryArray[j+1]]);\n\t\t\t\tswap(auxiliaryArray, j, j+1);\n\t\t\t\tswapped = true;\n\t\t\t}\n\t\t}\n\t\tif(!swapped){\n\t\t\tbreak;\n\t\t}\n\t}\n}"]},"metadata":{},"sourceType":"module"}