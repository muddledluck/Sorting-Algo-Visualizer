{"ast":null,"code":"var _jsxFileName = \"/home/kali/Desktop/Project/sortingvisualizer/src/components/SortingVisualizer/SortingVisualizer.js\";\nimport React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './SortingVisualizer.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < 400; i++) {\n      array.push(randomIntFromInterval(5, 900));\n    }\n\n    this.setState({\n      array\n    });\n  }\n\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"array-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      bg: \"light\",\n      expand: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"mr-3\",\n      controlId: \"formBasicRange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }\n    }, \"Size of Array\"), /*#__PURE__*/React.createElement(Form.Control, {\n      onChange: value => this.resetarray(value),\n      type: \"range\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 10\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      className: \"mr-3\",\n      onClick: () => this.resetArray(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 6\n      }\n    }, \"Generate New Array\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"mr-3\",\n      onClick: () => this.resetArray(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, \"Marge Sort\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"mr-3\",\n      onClick: () => this.resetArray(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, \"Quick Sort\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"mr-3\",\n      onClick: () => this.resetArray(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, \"Heap Sort\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"mr-3\",\n      onClick: () => this.resetArray(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, \"Bubble Sort\")), array.map((value, idx) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"array-bar\",\n      key: idx,\n      style: {\n        height: `${value}px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 10\n      }\n    })));\n  }\n\n} //https://stackoverflow.com/questions/1527803/generating-random-whole-numbers-in-javascript-in-a-specific-range\n\n\nfunction randomIntFromInterval(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport default SortingVisualizer;","map":{"version":3,"sources":["/home/kali/Desktop/Project/sortingvisualizer/src/components/SortingVisualizer/SortingVisualizer.js"],"names":["React","Navbar","Button","Form","SortingVisualizer","Component","constructor","props","state","array","componentDidMount","resetArray","i","push","randomIntFromInterval","setState","render","value","resetarray","map","idx","height","min","max","Math","floor","random"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './SortingVisualizer.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass SortingVisualizer extends React.Component{\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tarray: [],\n\t\t}\n\t}\n\tcomponentDidMount(){\n\t\tthis.resetArray();\n\t}\n\n\tresetArray(){\n\t\tconst array = [];\n\t\tfor (let i = 0; i< 400; i++){\n\t\t\tarray.push(randomIntFromInterval(5, 900));\n\t\t}\n\t\tthis.setState({array})\n\t}\n\n\n\trender() {\n\t\tconst {array} = this.state;\n\t\treturn (\n\t\t\t<div className=\"array-container\">\n\t\t\t\t<Navbar bg=\"light\" expand=\"lg\">\n\t\t\t\t\t<Form>\n\t\t\t\t\t  <Form.Group className = \"mr-3\" controlId=\"formBasicRange\">\n\t\t\t\t\t    <Form.Label>Size of Array</Form.Label>\n\t\t\t\t\t    <Form.Control onChange={(value) => this.resetarray(value)} type=\"range\" />\n\t\t\t\t\t  </Form.Group>\n\t\t\t\t\t</Form>\n\t\t\t\t\t<Button className=\"mr-3\" onClick={() => this.resetArray()}>Generate New Array</Button>\n\t\t\t\t  <Button className=\"mr-3\" onClick={() => this.resetArray()}>Marge Sort</Button>\n\t\t\t\t  <Button className=\"mr-3\" onClick={() => this.resetArray()}>Quick Sort</Button>\n\t\t\t\t  <Button className=\"mr-3\" onClick={() => this.resetArray()}>Heap Sort</Button>\n\t\t\t\t  <Button className=\"mr-3\" onClick={() => this.resetArray()}>Bubble Sort</Button>\n\t\t\t\t</Navbar>\n\t\t\t\t{\n\t\t\t\t\tarray.map((value, idx) => (\n\t\t\t\t\t\t\t\t\t<div  \n\t\t\t\t\t\t\t\t\t\tclassName=\"array-bar\" \n\t\t\t\t\t\t\t\t\t\tkey={idx} \n\t\t\t\t\t\t\t\t\t\tstyle={{height: `${value}px`}}></div>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\n\n//https://stackoverflow.com/questions/1527803/generating-random-whole-numbers-in-javascript-in-a-specific-range\nfunction randomIntFromInterval(min, max) {\n\treturn Math.floor(Math.random() * (max-min + 1) + min);\n}\nexport default SortingVisualizer;"]},"metadata":{},"sourceType":"module"}